// GENERATED. DON'T EDIT MANUALLY
// md5hash: ee62898c6156ed09e6660d9081e8ef78
{
    "type": "object",
    "properties": {
        "enableBuiltinSnippets": {
            "description": "Include builtin JS snippets",
            "default": true,
            "type": "boolean"
        },
        "useParamMode": {
            "description": "Choose the output for useSnippet type:\n```ts\n// generic\nconst params = useParams<'groupId'>()\n// cast\nconst params = useParams() as { groupId: string }\n```\n[see issue for more](https://github.com/remix-run/react-router/issues/8498)",
            "default": "cast",
            "enum": [
                "cast",
                "generic"
            ],
            "type": "string"
        },
        "enableExperimentalSnippets": {
            "description": "Whether to enable builtin postfix snippets. They may be moved to another extension in future releases",
            "default": false,
            "type": "boolean"
        },
        "customSnippets": {
            "type": "array",
            "items": {
                "allOf": [
                    {
                        "type": "object",
                        "properties": {
                            "body": {
                                "anyOf": [
                                    {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "type": "string"
                                    }
                                ]
                            },
                            "executeCommand": {
                                "description": "Execute custom command on snippet accept, doesn't work with resolveImports",
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "properties": {
                                            "command": {
                                                "type": "string"
                                            },
                                            "arguments": {
                                                "type": "array",
                                                "items": {}
                                            }
                                        },
                                        "required": [
                                            "arguments",
                                            "command"
                                        ]
                                    },
                                    {
                                        "type": "string"
                                    }
                                ]
                            },
                            "resolveImports": {
                                "description": "For JS langs only. How to resolve suggested imports if any",
                                "type": "object",
                                "additionalProperties": {
                                    "type": "object",
                                    "properties": {
                                        "package": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "when": {
                                "type": "object",
                                "properties": {
                                    "lineHasRegex": {
                                        "description": "Shouldn't be used with `Start` location as snippet would be hidden in that case",
                                        "type": "string"
                                    },
                                    "lineRegex": {
                                        "description": "Same as `lineHasRegex`, but the line will be tested from first character till current cursor position",
                                        "type": "string"
                                    },
                                    "languages": {
                                        "description": "Language identifier. Special ones: styles (css, scss...), js (js, ts, jsx, tsx)",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "locations": {
                                        "description": "Specify to restrict showing suggest in specific location",
                                        "type": "array",
                                        "items": {
                                            "enum": [
                                                "code",
                                                "comment",
                                                "fileStart",
                                                "lineStart",
                                                "topLineStart"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "pathRegex": {
                                        "type": "string"
                                    },
                                    "fileType": {
                                        "description": "Shortcuts for complex path regexs. If specified, `pathRegex` is ignored",
                                        "enum": [
                                            "package.json",
                                            "tsconfig.json"
                                        ],
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "required": [
                            "body"
                        ]
                    },
                    {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "description": {
                                "description": "Displayed in completion widget",
                                "type": "string"
                            },
                            "group": {
                                "type": "string"
                            },
                            "fileIcon": {
                                "description": "If specified, `iconType` is ignored. It makes sense to use with custom file icon theme",
                                "type": "string"
                            },
                            "folderIcon": {
                                "description": "If specified, `iconType` and `fileIcon` is ignored. It makes sense to use with custom file icon theme",
                                "type": "string"
                            },
                            "sortText": {
                                "type": "string"
                            },
                            "iconType": {
                                "anyOf": [
                                    {
                                        "enum": [
                                            "Class",
                                            "Color",
                                            "Constant",
                                            "Constructor",
                                            "Enum",
                                            "EnumMember",
                                            "Event",
                                            "Field",
                                            "File",
                                            "Folder",
                                            "Function",
                                            "Interface",
                                            "Issue",
                                            "Keyword",
                                            "Method",
                                            "Module",
                                            "Operator",
                                            "Property",
                                            "Reference",
                                            "Snippet",
                                            "Struct",
                                            "Text",
                                            "TypeParameter",
                                            "Unit",
                                            "User",
                                            "Value",
                                            "Variable"
                                        ],
                                        "type": "string"
                                    },
                                    {
                                        "type": "number"
                                    }
                                ]
                            },
                            "type": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "description",
                            "name"
                        ]
                    }
                ]
            }
        },
        "typingSnippets": {
            "type": "array",
            "items": {
                "allOf": [
                    {
                        "type": "object",
                        "properties": {
                            "body": {
                                "anyOf": [
                                    {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "type": "string"
                                    }
                                ]
                            },
                            "executeCommand": {
                                "description": "Execute custom command on snippet accept, doesn't work with resolveImports",
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "properties": {
                                            "command": {
                                                "type": "string"
                                            },
                                            "arguments": {
                                                "type": "array",
                                                "items": {}
                                            }
                                        },
                                        "required": [
                                            "arguments",
                                            "command"
                                        ]
                                    },
                                    {
                                        "type": "string"
                                    }
                                ]
                            },
                            "resolveImports": {
                                "description": "For JS langs only. How to resolve suggested imports if any",
                                "type": "object",
                                "additionalProperties": {
                                    "type": "object",
                                    "properties": {
                                        "package": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "when": {
                                "type": "object",
                                "properties": {
                                    "lineHasRegex": {
                                        "description": "Shouldn't be used with `Start` location as snippet would be hidden in that case",
                                        "type": "string"
                                    },
                                    "lineRegex": {
                                        "description": "Same as `lineHasRegex`, but the line will be tested from first character till current cursor position",
                                        "type": "string"
                                    },
                                    "languages": {
                                        "description": "Language identifier. Special ones: styles (css, scss...), js (js, ts, jsx, tsx)",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "locations": {
                                        "description": "Specify to restrict showing suggest in specific location",
                                        "type": "array",
                                        "items": {
                                            "enum": [
                                                "code",
                                                "comment",
                                                "fileStart",
                                                "lineStart",
                                                "topLineStart"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "pathRegex": {
                                        "type": "string"
                                    },
                                    "fileType": {
                                        "description": "Shortcuts for complex path regexs. If specified, `pathRegex` is ignored",
                                        "enum": [
                                            "package.json",
                                            "tsconfig.json"
                                        ],
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "required": [
                            "body"
                        ]
                    },
                    {
                        "type": "object",
                        "properties": {
                            "sequence": {
                                "description": "Snippet will be accepted only after typing THE EXACT sequence of characters on the keyboard. Using arrows or mouse for navigating will reset the sequence (see settings)",
                                "type": "string"
                            }
                        },
                        "required": [
                            "sequence"
                        ]
                    }
                ]
            }
        },
        "typingSnippetsUndoStops": {
            "default": true,
            "type": "boolean"
        },
        "snippetCreator.showSnippetAfterCreation": {
            "default": "false Open snippet after its creation",
            "type": "boolean"
        },
        "customSnippetDefaults": {
            "type": "object",
            "properties": {
                "sortText": {
                    "type": "string"
                },
                "iconType": {
                    "anyOf": [
                        {
                            "enum": [
                                "Class",
                                "Color",
                                "Constant",
                                "Constructor",
                                "Enum",
                                "EnumMember",
                                "Event",
                                "Field",
                                "File",
                                "Folder",
                                "Function",
                                "Interface",
                                "Issue",
                                "Keyword",
                                "Method",
                                "Module",
                                "Operator",
                                "Property",
                                "Reference",
                                "Snippet",
                                "Struct",
                                "Text",
                                "TypeParameter",
                                "Unit",
                                "User",
                                "Value",
                                "Variable"
                            ],
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ]
                },
                "type": {
                    "type": "string"
                },
                "description": {
                    "description": "Displayed in completion widget",
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "when": {
                    "type": "object",
                    "properties": {
                        "languages": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "locations": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "code",
                                    "comment",
                                    "fileStart",
                                    "lineStart",
                                    "topLineStart"
                                ],
                                "type": "string"
                            }
                        },
                        "pathRegex": {
                            "description": "Restrict suggesting all snippets (instead of overriding, regexs will be merged)",
                            "type": "string"
                        }
                    }
                }
            },
            "required": [
                "description"
            ]
        }
    },
    "required": [
        "customSnippetDefaults",
        "customSnippets",
        "enableBuiltinSnippets",
        "enableExperimentalSnippets",
        "snippetCreator.showSnippetAfterCreation",
        "typingSnippets",
        "typingSnippetsUndoStops",
        "useParamMode"
    ]
}