# generated by patch-package 6.4.8 on 2022-11-01 22:55:11
#
# command:
#   npx patch-package vscode-framework
#
# declared package:
#   vscode-framework: ^0.0.18
#
diff --git a/node_modules/vscode-framework/build/cli/configurationFromType.js b/node_modules/vscode-framework/build/cli/configurationFromType.js
index ea2d299..e89c194 100644
--- a/node_modules/vscode-framework/build/cli/configurationFromType.js
+++ b/node_modules/vscode-framework/build/cli/configurationFromType.js
@@ -72,6 +72,8 @@ const generateConfigFromFile = (configurationTypeFilePath) => {
         required: true,
         strictNullChecks: true,
         topRef: true,
+        validationKeywords: ['enumDescription', 'suggestSortText', 'defaultSnippets'],
+        ignoreErrors: true
     };
     console.time('TJS generate configuration');
     const program = TJS.getProgramFromFiles([configurationTypeFilePath], {});
diff --git a/node_modules/vscode-framework/build/extensionBootstrap.ts b/node_modules/vscode-framework/build/extensionBootstrap.ts
index 79d884c..cdc8533 100644
--- a/node_modules/vscode-framework/build/extensionBootstrap.ts
+++ b/node_modules/vscode-framework/build/extensionBootstrap.ts
@@ -109,5 +109,5 @@ if (process.env.EXTENSION_BOOTSTRAP_CONFIG) {
 export const activate: Extension['activate'] = ctx => {
     __VSCODE_FRAMEWORK_CONTEXT = ctx
     for (const activate of activateFunctions) void activate(ctx)
-    require(process.env.EXTENSION_ENTRYPOINT!).activate(ctx)
+    return require(process.env.EXTENSION_ENTRYPOINT!).activate(ctx)
 }
